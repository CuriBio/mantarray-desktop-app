minimum_pre_commit_version: "2.7.1"
fail_fast: false
repos:
  # Git-related
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0 # Use the ref you want to point at
    hooks:
      - id: forbid-new-submodules
  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 2.1.4 # Use the ref you want to point at
    hooks:
      - id: git-dirty

  # Reformatting (should generally come before any file format or other checks, because reformatting can change things)
  - repo: https://github.com/sqlalchemyorg/zimports
    rev: 0.2.0 # pick a hash or tag to point to
    hooks:
      - id: zimports

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0 # Use the ref you want to point at
    hooks:
      # black and docformatter don't do this in docstrings (11/1/19)
      - id: trailing-whitespace
      - id: pretty-format-json
        args: [--autofix, --no-sort-keys]
        exclude: sample_waveform_data/|.babelrc|Pipfile.lock
        # debatable whether this is necessary in Python3 or not
        # https://stackoverflow.com/questions/14083111/should-i-use-encoding-declaration-in-python-3
      - id: fix-encoding-pragma

  - repo: https://github.com/psf/black
    rev: 19.10b0 # pick a git hash / tag to point to
    hooks:
      - id: black
      - id: black
        name: blacken pyinstaller spec
        files: "pyinstaller.spec"
        types: [file]

  - repo: https://github.com/prettier/prettier
    rev: 2.1.2
    hooks:
      - id: prettier
        #args: [--vue-indent-script-and-style true]

  - repo: https://github.com/myint/docformatter
    # black seems to be working on formatting docstrings, but use this for now
    rev: v1.3.1 # pick a git hash / tag to point to
    hooks:
      - id: docformatter
        exclude: (tests*)|(exceptions\.py)|(warnings\.py)

  # Safety/Security Issues
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.1.3
    hooks:
      - id: python-safety-dependencies-check

  - repo: https://github.com/PyCQA/bandit
    rev: 1.6.2
    hooks:
      - id: bandit
        exclude: tests*

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0 # Use the ref you want to point at
    hooks:
      - id: detect-private-key

  # Invalid File Checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0 # Use the ref you want to point at
    hooks:
      - id: check-added-large-files
        name: forbid large files in most places
        args: ["--maxkb=123"]
        exclude: "(src/xem_scripts/)|(electron-build-resources)|(package-lock.json)"
      - id: check-added-large-files
        name: forbid very large files inside src/xem_scripts
        args: ["--maxkb=450"]
        files: "src/xem_scripts"
      - id: check-added-large-files
        name: forbid very large files inside electron-build-resources
        args: ["--maxkb=130"]
        files: "electron-build-resources"
      - id: check-json
      - id: check-yaml
      - id: check-xml
      - id: debug-statements
      - id: check-merge-conflict
      - id: check-case-conflict

  # Linting
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.782 # pick a git hash / tag to point to
    hooks:
      - id: mypy
        additional_dependencies: [nptyping==1.3.0]

  - repo: https://github.com/Lucas-C/pre-commit-hooks-markup
    rev: v1.0.0
    hooks:
      - id: rst-linter
        exclude: docs

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.6.0 # pick a git hash / tag to point to
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods

  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.8.3 # pick a git hash / tag to point to
    hooks:
      - id: flake8

  - repo: https://github.com/PyCQA/pydocstyle
    # black seems to be working on formatting docstrings, but use this for now
    rev: 5.0.2 # pick a git hash / tag to point to
    hooks:
      - id: pydocstyle
        args:
          # ignore warnings about missing docstrings. pylint takes care of that
          # ignore D203 because it's a bug https://github.com/PyCQA/pydocstyle/issues/141
          # ignore D407,D408,D409 because they appear to be in conflict with Google style (they relate to underlining?) https://rsmith.home.xs4all.nl/programming/improving-my-python-coding.html
          # ignore D406 because it appears to be in conflict with Google style (complains about 'Raises:')
          # ignore D413 about final blank line because docformatter gets rid of it
          # ignore D213 because mutually exclusive with D212 https://stackoverflow.com/questions/45990301/pep257-d212-and-d213-conflicts
          - --ignore=D100,D101,D102,D103,D104,D105,D106,D107,D203,D407,D408,D409,D406,D413,D213

  - repo: https://github.com/NanoSurface-Biomedical/pre-commit-pylint
    rev: "d805cc60bb5290c2f1ca869d5f1d5e2be720f3fa" # pick a git hash / tag to point to
    hooks:
      - id: pylint-pass-with-displayed-warnings
        name: pylint-src
        args:
          - --codes-to-allow=W0511
          - src
          - --rcfile=src/pylintrc
          - --ignore-patterns=.*~.*
        files: 'src/.*\.py$'
        exclude: '.*\~.*'
        verbose: true
      - id: pylint-pass-with-displayed-warnings
        name: pylint-tests
        args:
          - --codes-to-allow=W0511
          - tests
          - --rcfile=tests/pylintrc
          - --ignore-patterns=.*~.*
        files: 'tests/.*\.py$'
        exclude: '.*\~.*'
        verbose: true
      - id: python-check-no-print-statments
      - id: vuejs-check-no-console-log-statments
